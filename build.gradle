plugins {
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "2.8"
    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.1.24"
    id 'java-library'
    id 'maven-publish'
    id "net.madeng.slack" version "0.0.21"


}

cucumberReports {
    outputDir = file('build/reports/')
    buildId = '0'
    reports = files('build/reports/example-report.json')
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
configurations {
    jaxDoclet
}

dependencies {
    testImplementation 'io.cucumber:cucumber-java:6.0.0'
    testImplementation 'io.cucumber:cucumber-junit:6.0.0'
    testImplementation 'junit:junit:4.12'

}


//test {
//    useJUnitPlatform()
//}

tasks.register("task1") {
    doLast {
        println greeting
    }
}

tasks.register("task2") {
    doLast {
        println "Hello , task2 the task which task1 depedns on !"
    }
}

tasks.register("task3"){
    doLast {
        println "Hello , task3 the task which task1 depends on !"
    }
}

tasks.register("task4"){
    doLast {
        println "Hello , task4 the task which finalizes the task1"
    }
}

// the dependent tasks will be executed alphabetically ( task2 before task3 ) we will specify the order in the 2nd section
task1.dependsOn task3,task2


task1.finalizedBy task4

// second section : MustRunAfter et ShouldRun after ( example , the command gradlew -q task2 , task3 )
task2.mustRunAfter task3
//list of available tasks
// craete directory
// copy files
// compress/decompress/delete folder


//task generateRestApiDocs(type: Javadoc) {
//    source = sourceSets.main.allJava
//    destinationDir = reporting.file("rest-api-docs")
////    options.docletpath = configurations.jaxDoclet.files.asType(List)
////    options.doclet = "com.lunatech.doclets.jax.jaxrs.JAXRSDoclet"
////    options.addStringOption("jaxrscontext", "http://localhost:8080/myapp")
//}

task generateMatrixAPI{
    doLast {
        println 'DONE !'
    }
}

task ensureDirectory{
    doLast {
        mkdir "MatrixRelease/Matrix_v_1.0"
    }
}

task copyReports (type: Copy){
    from "build/reports"
    into "MatrixRelease/Matrix_v_1.0/reports"
}

task copyDocs (type: Copy){
    from "build/docs"
    into "MatrixRelease/Matrix_v_1.0/docs"
}

task copyLibs (type: Copy){
    from "build/libs"
    into "MatrixRelease/Matrix_v_1.0/libs"
}
generateMatrixAPI.dependsOn ensureDirectory
ensureDirectory.dependsOn build,javadoc
ensureDirectory.finalizedBy copyLibs,copyDocs,copyReports

test.finalizedBy("sonarqube")

generateCucumberReports.dependsOn test

//FOR MAVEN
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

repositories {
    maven {
        url myMavenRepoReadUrl
    }
}

publishing {
    repositories {
        maven {
            url myMavenRepoWriteUrl

            credentials {
                username myMavenRepoWriteUsername
                password myMavenRepoWritePassword
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}


// FOR SLACK

slack {
    webhookUrl 'https://hooks.slack.com/services/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'
    message {
        text = "TP GRADLE  is built newly and deployed !"
        channel = '#ogl'
//        attachment {
//            authorName = gitUsername
//            color = 'good'
//            title = "Branch: ${gitBranchName}(${gitCommitHash})"
//            titleLink = "https://github.com/link/i/want/to/redirect"
//            field {
//                title = 'Built'
//                value = 'Success'
//                shortValue = true
//            }
//            field {
//                title = 'Deployed'
//                value = 'Success'
//                shortValue = true
//            }
//            action {
//                name: 'game'
//                text: 'Chess'
//                type: "button"
//                value: "chess"
//            }
//            action {
//                name: 'game'
//                text: 'Thermonuclear War'
//                style: 'danger'
//                type: 'button'
//                value: 'war'
//                confirm {
//                    title: 'Are you sure?'
//                    text: 'Wouldn't you prefer a good game of chess?'
//                    okText: 'Yes'
//                    dismissText: 'No'
//                }
//            }
//        }
    }
}
generateMatrixAPI.finalizedBy publish
publish.finalizedBy publishToSlack